/**
 * Typography SCSS Partial
 *
 * @requires framework/_type.scss
 */

/* ==|== Typography =================
	Load Typefaces from type.scss
========================================== */

/**
 * Loads in the CSS font-face declarations based on a Sass list of fonts and their styles
 * Set the number of fonts that you want to load in in $fonts-total
 * Set the fonts themselves and make sure they're in the assets/fonts folder
 * Set the styles for the fonts, if Font-number-1 is a regular weight put normal,
 * if Font-number-2 is an italic weight put italic etc
**/

@font-face {
	font-family: 'SkolarLatin';
	src: url('../fonts/SkolarLatin-Regular.eot');
	src: url('../fonts/SkolarLatin-Regular.eot?#iefix') format('embedded-opentype'),
		url('../fonts/SkolarLatin-Regular.woff2') format('woff2'),
		url('../fonts/SkolarLatin-Regular.woff') format('woff');
	font-weight: normal;
	font-style: normal;
}
@font-face {
	font-family: 'SkolarLatin';
	src: url('../fonts/SkolarLatin-Italic.eot');
	src: url('../fonts/SkolarLatin-Italic.eot?#iefix') format('embedded-opentype'),
		url('../fonts/SkolarLatin-Italic.woff2') format('woff2'),
		url('../fonts/SkolarLatin-Italic.woff') format('woff');
	font-weight: normal;
	font-style: italic;
}
@font-face {
	font-family: 'SkolarLatin';
	src: url('../fonts/SkolarLatin-Bold.eot');
	src: url('../fonts/SkolarLatin-Bold.eot?#iefix') format('embedded-opentype'),
		url('../fonts/SkolarLatin-Bold.woff2') format('woff2'),
		url('../fonts/SkolarLatin-Bold.woff') format('woff');
	font-weight: bold;
	font-style: normal;
}

/* ==|== Typography =================
	1. Headings
========================================== */

%heading-gradient {
	background: -webkit-linear-gradient(bottom left, color(accent-dark), color(accent-light));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

h1, h2, h3, p, ul, ol {
	display: block;
	@include font-feature-settings(liga kern onum);
	max-width: rem(w(text));
	width: 100%;
	.typeset & {
		max-width: calc(#{grid-unit(7, 12, false)});
	}
}

%heading-alpha {
	@extend %heading-gradient;
	@include font-size(64);
	color: module-color(type-header);
	font-weight: weight();
	line-height: line-height(heading);
	margin: 2em auto 1em;
  @include max-width($bp-small) {
    @include font-size(42);
  }
  @include max-width($bp-tiny) {
    @include font-size(34);
  }
}

.h--alpha {
	@extend %heading-alpha;
	max-width: rem(w(wrapper));
}

%heading-beta {
	@include font-size(32);
	font-weight: weight(bold);
	line-height: line-height(heading);
	margin: 0 auto 0.5em;
	padding-top: unit(3);

	@include max-width($bp-small) {
		@include font-size(28);
	}
	@include max-width($bp-tiny) {
		@include font-size(24);
	}
}

.h--beta {
	@extend %heading-beta;
}

h3 {
	color: module-color(p-alpha);
	font-family: $font-stack-alt;
	@include font-size(20);
	font-weight: weight(alt-bold);
	margin: unit(2) auto unit();
	line-height: line-height(heading);
	text-transform: uppercase;
	@include max-width($bp-small) {
		@include font-size(18);
	}
	@include max-width($bp-tiny) {
		@include font-size(16);
	}
}

.heading {
	position: relative;
	max-width: none;
	z-index: 1;
	.h--alpha,
	.h--beta {
		padding: 0 unit() 0 0;
		margin: 0;
		display: inline-block;
		vertical-align: top;
	}
	.h--beta {
		@extend %heading-gradient;
		color: module-color(type-header);
		@include font-size(52);
		font-weight: weight();
	}
	&__break {
		display: block;
		width: 100%;
	}
	&__pre {
		@at-root {
			[class^="heading__pre--"] {
				color: module-color(type-text);
				display: inline-block;
				font-family: $font-stack-alt; // TODO: Make into a variable
				@include font-size(14);
				font-weight: bold; // TODO: Change me
				margin-bottom: unit(2);
				position: relative;
				letter-spacing: 0.2em;
				text-transform: uppercase;
				&:before {
					background: linear-gradient(color(accent-light), color(accent-dark));
					content: '';
					position: absolute;
					opacity: 0.33;
					height: rem(2);
					width: 100vw;
					bottom: rem(3);
				}
			}
		}
		&--left {
			&:before {
				right: 100%;
				margin-right: unit(); // TODO: Convert to gutter
			}
		}
		&--right {
			&:before {
				left: 100%;
				margin-left: unit(); // TODO: Convert to gutter
			}
		}
	}
	&__images {
		@at-root {
			[class^="heading__images--"] {
				[class*="g--"] {
					// overflow: visible;
				}
			}
		}
		&--absolute {
			position: absolute;
			pointer-events: none;
			top: 50%;
			left: 0;
			width: 100%;
	    transform: translateY(-50%);
		}
	}
	&__text {
		position: relative;
		z-index: 1;
	}
	&__image {
		&__kite {
			@at-root {
				[class^="heading__image__kite--"] {
					$size: 71.25%;
					border-radius: unit(0.5);
					transform: rotate(45deg);
					position: relative;
					overflow: hidden;
					height: 0;
			    width: $size;
			    padding-top: $size;
			    margin: (100% - $size) / 2;
    			> b {
						background: center no-repeat;
				    background-size: cover;
						display: block;
						transform: rotate(-45deg);
						position: absolute;
						top: -25%;
						left: -25%;
						width: 150%;
						height: 150%;
					}
				}
			}
	    // &--outline {
	    &--border {
	    	// box-sizing: 
	    	background: none;
	    	&:after {
	    		content: '';
		    	border: unit(0.5) solid module-color(heading-kite);
	    		position: absolute;
	    		top: 0;
	    		left: 0;
	    		width: 100%;
	    		height: 100%;
	    	}
	    }
	    &--border {
	    	backface-visibility: hidden;
	    	&:after {
	    		border-width: unit(0.375);
	    		border-color: module-color(base-bg);
	    	}
	    	> b {
	    		backface-visibility: hidden;
	    	}
	    }
		}
	}
}

.heading--gutter {
	@include min-width(tp(has-gutter)) {
		float: left;
		width: rem(w(gutter));
		+ h3,
		+ p {
			margin-top: 0;
			padding-top: rem(56);
		}
		+ .blog__categories {
			margin-top: 0;
			padding-top: rem(57);
		}
	}
}

/* ==|== Typography =================
	Paragraphs
========================================== */
%paragraph {
	@include font-size(18);
	line-height:1.45;
	margin:rem(6) auto rem(12) auto;
	@include max-width($bp-small) {
		@include font-size(17);
	}
	@include max-width($bp-tiny) {
		@include font-size(16);
	}
}
p {
	@extend %paragraph;
}

.small-caps,
.sc {
	@include font-feature-settings(smcp c2sc lnum kern);
}
.small-caps {
	line-height: 1.1;
}

blockquote {
	margin: 0;
	// color: $color-accent;
	// border-left: color(accent) solid rem(2);
	// font-weight: $font-weight-normal;
	// font-style:italic;
 //  left: unit(-2);
 //  padding-left: rem(($measure * 2) - 2);
 //  position: relative;
 //  margin: unit(2) unit(-2) unit(2) auto;
 //  max-width:rem($layout-max-width + ($measure * 2));

	// p {
	// 	@include font-size(24);
	// 	@include max-width($bp-small) {
	// 		@include font-size(22);
	// 	}
	// 	@include max-width($bp-tiny) {
	// 		@include font-size(20);
	// 	}
	// }
	// cite {
	// 	font-family: $font-stack-alt;
 //    line-height: line-height(caption);
	// 	color:$color-accent;
	// 	font-style: normal;
	// 	display: block;
	// 	@include font-size(18);
	// 	margin-top: rem(5);
	// 	@include max-width($bp-small) {
	// 		@include font-size(17);
	// 	}
	// 	@include max-width($bp-tiny) {
	// 		@include font-size(16);
	// 	}
	// 	&:before {
	// 		content:'â€” ';
	// 	}
	// }
}

abbr[title] {
	border:0;
	background: linear-gradient(to left, $color-dark 33%, rgba($color-dark, 0) 34%) repeat-x left 88%;
	background-size:rem(3) rem(1);
}

// Typeset
.typeset {
	h1 {
		@extend %heading-alpha;
	  & + h2 {
	  	padding-top: rem(28);
	  }
	}
	h2 {
		@extend %heading-beta;
	}
	h1,
	h2,
	h3,
	%paragraph {
		margin-right: 0;
		// @include min-width(tp(has-gutter)) {
		// }
	}
	ul,
	ol {
		left: 0;
	}
}