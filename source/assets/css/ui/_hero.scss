/**
 * HERO
 *
 * Styles the hero â€“ image behind the main content
**/

/* ==|== Hero ============================
  Base
========================================== */

.hero {
  background: module-color(base-bg);
  bottom: unit() + rem(1); // TODO: Var
  left: unit(0.5) + rem(1); // TODO: Var
  max-height: 66vh;
  position: absolute;
  right: unit(0.5) + rem(1); // TODO: Var
  top: unit() + rem(1); // TODO: Var
  z-index: -1;

  .page--full-hero &,
  &[data-hero-dynamic] {
    // Hack: Double value to fix the iOS issues with 100vh
    max-height: 98vh;
    max-height: calc(100vh - #{unit(2)});

    @include min-width(bp(s)) {
      left: unit() + rem(1); // TODO: Var
      right: unit() + rem(1); // TODO: Var
    }
  }

  &[data-hero-dynamic] {
    position: fixed;
  }
  
  .page--moment & {
    max-height: 75vh;
  }

  &__bg,
  &__overlay,
  &__cover {
    left: 0;
    height: 100%;
    position: absolute;
    top: 0;
    width: 100%;
  }

  &__bg {
    background: module-color(base-bg) center top no-repeat;
    background-size: cover;
    filter: grayscale(1);
    opacity: 0.25;

    @supports(mix-blend-mode: overlay) {
      mix-blend-mode: overlay;
      opacity: 0.7;
    }
  }

  &__overlay {
    background: linear-gradient(module-color(base-bg) 5%, transparent 30%, transparent 50%, module-color(base-bg));
  }

  &__cover {
    background-color: module-color(base-bg);
    opacity: 1;
    transition: opacity timing(hero) easing();

    .js--hero-loaded & {
      opacity: 0;
    }

    [data-hero-dynamic] & {
      opacity: 1;
      transition-duration: timing(hero-dynamic);
    }

    @at-root {
      @for $hero_dynamic from 0 through $hero-max-dynamic - 1 {
        [data-hero-dynamic="#{$hero_dynamic}"]:hover ~ [data-hero-dynamic="#{$hero_dynamic}"] .hero__cover {
          opacity: 0;
        }
      }
    }
  }
}